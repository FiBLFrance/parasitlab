/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 3);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/choisir.js":
/*!*********************************!*\
  !*** ./resources/js/choisir.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Intervient dans la page choisir (ExtranetDemandeController@choisir)\n// Quand on clique sur l'icone de l'espece, cela affiche la liste des questions que l'on peut se poser  sur le parasitisme de cette espece\n// via une requete ajax qui interroge la méthode ExtranetDemandeController@observationSelonEspece\n// On affiche cette liste dans la vue methodeChoixAnalyse\n// Cela permet ensuite de cliquer sur les différentes observations et à chaque fois, ça fait uner requete ajax (ExtranetDemandeController@analyseSelonObservations)\n// Cette requete retourne un json que l'on affiche dans la vue options.blade\nvar choisirFirst = $('#choisirFirst').attr('session'); // Initialise la liste des observations\n\nvar tableau_observations = [];\nvar selection = []; // On récupére l'url actuelle\n\nvar url_actuelle = window.location.protocol + \"//\" + window.location.host + window.location.pathname; // récupère l'adresse de la page actuelle\n// On récupère le href original du bouton de téléchargment de formulaire pour pouvoir le remettre à zéro quand on change d'espèce\n\nvar href_initial = $(\"#bouton_pdf\").attr('href'); // On récupère l'adresse des icones ainsi que le contenu du tooltip pour la remise à zéro en changement d'espcèce\n\nvar src_img_espece = $('#src_img_espece').attr('lien'); //#################################### INTRODUCTION ############################################################\n// Explique qu'il faut choisir une analyse\n// Efface l'explication et affiche la liste des especes\n\n$('#choisirExplicationBouton').on('click', function () {\n  $('#choisirExplication').hide();\n  $('#choisirEspece').fadeIn();\n}); // ##################### PREMIERE ETAPE ##########################################################################\n// Affichage des analyses proposées après qu'on ait cliqué sur l'icone de l'espece (dans choisir.blade.php)\n\n$('.espece').on('click', function () {\n  // On efface les fenêtre ages\n  $(\"#age\").empty(); // On vide le champs input ages\n\n  $(\"#input_age\").val(''); // On réinitialise le bouton de téléchargement de fichier\n\n  $('#bouton_pdf').attr('href', href_initial); // On modifie l'affichage des logos espece\n\n  $(\".espece\").css('filter', 'opacity(20%)');\n  $(this).css('filter', 'blur(0px)'); // On vide la colonne d'options\n\n  videOptionsAnaaactes(); // On efface les intertitres correspondant aux categories\n\n  $('.categorie').hide(); // On vide la liste d'observation\n\n  $('.liste_observations').empty();\n  selection = []; // On récupère l'id de l'espece sur laquelle on a cliqué\n\n  var espece_id = $(this).attr('id').split('_')[1];\n  var espece_nom = $(this).attr('espece'); // On stocke cette valeur dans un input hidden pour la suite\n\n  $(\"#input_espece\").val(espece_id); // On prépare une requete ajax sur les ages\n\n  var url = url_actuelle.replace('analyses/choisir', 'api/ages/' + espece_id); // Requete ajax\n\n  $.get({\n    url: url\n  }).done(function (data) {\n    var ages = JSON.parse(data); // Si le json renvoyé par la requete 'n'est pas un tableau vide c'est qu'il y a différentes classes d'age\n\n    if (ages.length > 0) {\n      // On ajoute le titre: Choisir un age\n      var ajout = '<div class=\"my-3 p-3\"><p class=\"lead\">' + $(\"#age\").attr('titre') + '</p>'; // On passe en revue le tableau\n\n      $.each(ages, function (key, lignes) {\n        // Et à chaque fois on ajoute une image correspondant à un age de l'espece sélectionnée\n        ajout += '<img id=\"ages_' + lignes.id + '\" class=\"age img-zoom mr-3\" src=\"' + src_img_espece + '/' + lignes.icone.nom + '\" alt=\"ages\" data-toggle=\"tooltip\" title=\"' + lignes.nom + '\">';\n      });\n      ajout += '</div>'; // On fait l'ajout\n\n      $('#age').append(ajout); // Puis l'utilisateur clique sur une de des icones d'age\n\n      $(\".age\").on('click', function () {\n        var age_id = $(this).attr('id').split('_')[1]; // On passe l'info à l'input hidden du formulaire\n\n        $(\"#input_age\").val(age_id); // On change l'icone du bovin pour s'adapter au choix\n\n        $('#img_' + espece_id).attr('src', $(this).attr('src')); // On ajoute le nom de l'age à l'icone d'origine\n\n        $('#img_' + espece_id).attr('title', $(this).attr('title')); // On vide le titre de la page pour le remplacer par le nom de l'age\n\n        $(\"#titre\").empty().append($(this).attr('title')); // On efface la fenêtre de choix\n\n        $(\"#age\").empty(); // on appelle la fonction qui fait la requete ajax permettant d'afficher les options\n\n        listeObservations('ages', age_id);\n      }); // S'il n'y a pas de classe d'age dans l'espece sélectionnée\n    } else {\n      // On vide le titre de la page pour le remplacer par le nom de l'age\n      $(\"#titre\").empty().append(espece_nom); // on appelle directement la fonction qui fait la requete ajax\n\n      listeObservations('especes', espece_id);\n    }\n  }); // On récupère l'abbreviation de l'espece pour pouvoir modifier le href du bouton de téléchargement du formulaire\n\n  var espece_abbreviation = $(this).attr('name');\n  var href = href_initial.replace('espece', espece_abbreviation);\n  $('#bouton_pdf').attr('href', href);\n  var observation_id = ''; // On réinitialise le tableau de observations sélectionnées\n\n  tableau_observations = []; // On remet à zéro le numéro d'observation qui serait sélectionné\n\n  $('.liste_observations').each(function (key, value) {\n    selection.push(null);\n  });\n}); // Fonction qui requete ajax avec l'espece_id (ExtranetDemandeController@observationSelonEspece)\n// Et affiche le résultat sous la forme d'une liste d'observations avec trois propriétés quand on clique:\n// 1) ça met l'observation en couleur\n// 2) cela expand l'affichage pour montrer l'explication et les autres origines\n// 3) ça complete la liste des observations cliquées et ça fait une requete ajax pour afficher la liste des analyses\n\nfunction listeObservations(type, id) {\n  // affiche le soustitre et on lui donne l'attribut espece avec l'espece_id comme valeur pour la requete ajax suivante\n  $(\"#titre_observations\").fadeIn(); // On affiche le tuto\n\n  if (choisirFirst) {\n    $(\"#choisirTuto\").fadeIn();\n    choisirFirst = false;\n  } // On modifie l'url pour pouvoir faire la requete\n\n\n  var url = url_actuelle.replace('analyses/choisir', 'api/observations/' + type + '/' + id);\n  $.get({\n    url: url\n  }).done(function (datas) {\n    if (datas != null) {\n      lignes = JSON.parse(datas);\n      $('.categorie').fadeIn();\n      $.each(lignes, function (key, ligne) {\n        // la creation de la variable autre est destinée à ne rien afficher quand la valeur de ligne.autres est null\n        var autres = ligne.autres == null ? '' : '<p class=\"ml-3 mb-0 p-1 pl-2 bordure-epaisse\"><i>Autres causes&nbsp;: </i>' + ligne.autres + '</p>'; // On ajoute la liste des observations\n\n        $(\"#categorie_\" + ligne.categorie_id).append('<div id=\"card_' + ligne.id + '\" class=\"card borderless\" categorie=\"' + ligne.categorie_id + '\">' + '<div id=\"observation_' + ligne.id + '\" class=\"card-header observation list-group-item list-group-item-action disabled pointeur\" selection=\"non\" >' + ligne.intitule + '</div>' + '<div id=\"explication_' + ligne.id + '\" class=\"collapse bg-bleu-tres-clair\">' + '<div class=\"card-body small\">' + '<p class=\"ml-3 mb-0 p-1 pl-2 bordure-epaisse\">' + ligne.explication + '</p>' + autres + '</div>' + '</div>' + '</div>');\n      });\n    }\n\n    ;\n  }).fail(function (datas) {\n    console.log('ERREUR: ' + datas);\n  });\n} // ################ DEUXIEME ETAPE ###########################################################\n// Quand on clique sur les observations\n\n\n$(\".liste_observations\").on('click', \".card\", function () {\n  // On récupère l'id de la card qui englobe observation et explication cliquée\n  var id = $(this).attr('id').split('_')[1];\n  var observation_id = '#observation_' + id;\n  var explication_id = '#explication_' + id;\n  var estSelection = $(observation_id).attr('selection'); // On récupère la catégorie\n\n  var categorie_id = $(this).parent().attr('id');\n  var id_categorie = categorie_id.split('_')[1]; // SUR LA COLONNE OBSERVATIONS:\n\n  if (estSelection == \"oui\") {\n    inactiveObservation(id); // On supprime cette valeur dui tableau selection\n\n    selection[id_categorie - 1] = null;\n  } else if (estSelection == \"non\") {\n    // On passe l'attribut selection à true\n    // Si une observation de cette catégorie est présente dans le tableau selection (cad a été sélectionnée avant)\n    if (selection[id_categorie - 1] != null) {\n      // Le id_categorie-1 est du au fait que l'array selection indice à 0 tandis que les bdd commencent à 1\n      var id_observation_active = selection[id_categorie - 1]; // On inactive l'observation (fermer le collapse, enlever la couleur)\n\n      inactiveObservation(id_observation_active);\n    } // Puis on inscrit la nouvelle obbservation cliquée dans le tableau selection\n\n\n    selection[id_categorie - 1] = id; // Le \"-1\" est dû au fait que les id des catégories commencent à 1 tandis que l'index du tableau à 0\n\n    activeObservation(id);\n  } // ON EFFACE TOUTE LA COLONNE OPTIONS:\n\n\n  videOptionsAnaaactes(); // On stocke la sélection dans les input pour la transmission ajax\n\n  $.each(selection, function (key, value) {\n    var indice = key + 1;\n    $(\"#input_\" + indice).val(value);\n  }); // On appelle la fonction listeOptions qui fait une requete post du formulaire caché (ExtranetDemandeController@optionsSelonObservations)\n\n  listeOptions(); // Et on remonte le scroll juste sous la ligne des especes\n\n  window.scrollTo(200, 250);\n}); // Ferme le tuto si on clique sur la petite souris\n\n$('#avousdejouer').on('click', function () {\n  $('#choisirTuto').fadeOut();\n  window.scrollTo(200, 250);\n}); //#####################################################################################\n// FONCTIONS //\n//######################################################################################\n// Fonction qui passe en display:block les options et les analyses sélectionnées\n\nfunction listeOptions() {\n  var url_actuelle = window.location.protocol + \"//\" + window.location.host + window.location.pathname; // récupère l'adresse de la page actuelle\n  // On modifie l'url pour pouvoir faire la requete\n\n  var url = url_actuelle.replace('analyses/choisir', 'api/options');\n  $(\"#choisirTuto\").hide();\n  $.post({\n    url: url,\n    data: $('form').serialize(),\n    // on passe le formulaire caché\n    datatype: 'json'\n  }).done(function (datas) {\n    if (datas != null) {\n      // Si des données sont revenues (ce qui doit être systématiquement le cas)\n      var options = JSON.parse(datas).options; // On récupère le tableau options (2 options max)\n\n      var anaactes = JSON.parse(datas).anaactes; // on révupère le tableau anaactes (2 anaactes max)\n\n      if (nombreSelections(selection) > 0) {\n        // S'il y a au moins une sélection\n        if (options.length == 0) {\n          // Mais que le tableau option est vide, on affiche un message qu'il n'y a pas d'analyse\n          $('#aucune_option').show();\n        } else {\n          // Mais si le tableau option n'est pas vide, on affiche les options et anaactes correpondants\n          $.each(options, function (key, value) {\n            // Affichage des options\n            $('#' + value + '.option').fadeIn();\n          });\n\n          if (anaactes.length == 1) {\n            // Affichage d'un titre d'analyses différent s'il y en a une ou deux\n            $('#une').fadeIn();\n          } else {\n            $('#deux').fadeIn();\n          }\n\n          $.each(anaactes, function (key, value) {\n            // Affichage des analyses\n            $('#anaacte_' + value).fadeIn();\n          });\n          $('#boutons').fadeIn(1000);\n        }\n\n        $('#penser_veto').fadeIn(3000); // Et le véto\n\n        if ($(\"#input_espece\").val() == 5) {\n          $('#autres_analyses').fadeIn(2000);\n        }\n      } else {\n        // Si il n'y aucune observation séléctionnée, on efface tout\n        videOptionsAnaaactes();\n      }\n    }\n  }).fail(function (data) {\n    console.log(data);\n  });\n}\n\nfunction videOptionsAnaaactes() {\n  // On masque le panneau veto\n  $(\"#penser_veto\").hide();\n  $(\"#autres_analyses\").hide();\n  $('#boutons').hide(); // On masque la liste d'options\n\n  $('.option').hide();\n  $('.anaacte').hide(); // On masque le titre des analyses proposées\n\n  $(\".titre_analyses\").hide(); // On vide le 0 option\n\n  $('#aucune_option').hide();\n}\n\nfunction inactiveObservation(id) {\n  $(\"#observation_\" + id).attr('selection', 'non');\n  $(\"#observation_\" + id).toggleClass('active').toggleClass('disabled');\n  $(\"#explication_\" + id).removeClass('show');\n}\n\nfunction activeObservation(id) {\n  $(\"#observation_\" + id).attr('selection', 'oui');\n  $(\"#observation_\" + id).toggleClass('active').toggleClass('disabled');\n  $(\"#explication_\" + id).addClass('show');\n}\n\nfunction nombreSelections(selection) {\n  var longueur_selection = 0;\n  selection.forEach(function (value) {\n    longueur_selection += value == null ? 0 : 1;\n  });\n  return longueur_selection;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY2hvaXNpci5qcz83Y2E1Il0sIm5hbWVzIjpbImNob2lzaXJGaXJzdCIsIiQiLCJhdHRyIiwidGFibGVhdV9vYnNlcnZhdGlvbnMiLCJzZWxlY3Rpb24iLCJ1cmxfYWN0dWVsbGUiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsInByb3RvY29sIiwiaG9zdCIsInBhdGhuYW1lIiwiaHJlZl9pbml0aWFsIiwic3JjX2ltZ19lc3BlY2UiLCJvbiIsImhpZGUiLCJmYWRlSW4iLCJlbXB0eSIsInZhbCIsImNzcyIsInZpZGVPcHRpb25zQW5hYWFjdGVzIiwiZXNwZWNlX2lkIiwic3BsaXQiLCJlc3BlY2Vfbm9tIiwidXJsIiwicmVwbGFjZSIsImdldCIsImRvbmUiLCJkYXRhIiwiYWdlcyIsIkpTT04iLCJwYXJzZSIsImxlbmd0aCIsImFqb3V0IiwiZWFjaCIsImtleSIsImxpZ25lcyIsImlkIiwiaWNvbmUiLCJub20iLCJhcHBlbmQiLCJhZ2VfaWQiLCJsaXN0ZU9ic2VydmF0aW9ucyIsImVzcGVjZV9hYmJyZXZpYXRpb24iLCJocmVmIiwib2JzZXJ2YXRpb25faWQiLCJ2YWx1ZSIsInB1c2giLCJ0eXBlIiwiZGF0YXMiLCJsaWduZSIsImF1dHJlcyIsImNhdGVnb3JpZV9pZCIsImludGl0dWxlIiwiZXhwbGljYXRpb24iLCJmYWlsIiwiY29uc29sZSIsImxvZyIsImV4cGxpY2F0aW9uX2lkIiwiZXN0U2VsZWN0aW9uIiwicGFyZW50IiwiaWRfY2F0ZWdvcmllIiwiaW5hY3RpdmVPYnNlcnZhdGlvbiIsImlkX29ic2VydmF0aW9uX2FjdGl2ZSIsImFjdGl2ZU9ic2VydmF0aW9uIiwiaW5kaWNlIiwibGlzdGVPcHRpb25zIiwic2Nyb2xsVG8iLCJmYWRlT3V0IiwicG9zdCIsInNlcmlhbGl6ZSIsImRhdGF0eXBlIiwib3B0aW9ucyIsImFuYWFjdGVzIiwibm9tYnJlU2VsZWN0aW9ucyIsInNob3ciLCJ0b2dnbGVDbGFzcyIs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QXpCO0FBQ0ExRSxXQUFTLENBQUMyRSxPQUFWLENBQWtCLFVBQVNsQyxLQUFULEVBQWdCO0FBQ2hDaUMsc0JBQWtCLElBQUtqQyxLQUFLLElBQUksSUFBVixHQUFrQixDQUFsQixHQUFzQixDQUE1QztBQUNELEdBRkQ7QUFJQSxTQUFPaUMsa0JBQVA7QUFDRCIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9jaG9pc2lyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW50ZXJ2aWVudCBkYW5zIGxhIHBhZ2UgY2hvaXNpciAoRXh0cmFuZXREZW1hbmRlQ29udHJvbGxlckBjaG9pc2lyKVxyXG4vLyBRdWFuZCBvbiBjbGlxdWUgc3VyIGwnaWNvbmUgZGUgbCdlc3BlY2UsIGNlbGEgYWZmaWNoZSBsYSBsaXN0ZSBkZXMgcXVlc3Rpb25zIHF1ZSBsJ29uIHBldXQgc2UgcG9zZXIgIHN1ciBsZSBwYXJhc2l0aXNtZSBkZSBjZXR0ZSBlc3BlY2VcclxuLy8gdmlhIHVuZSByZXF1ZXRlIGFqYXggcXVpIGludGVycm9nZSBsYSBtw6l0aG9kZSBFeHRyYW5ldERlbWFuZGVDb250cm9sbGVyQG9ic2VydmF0aW9uU2Vsb25Fc3BlY2VcclxuLy8gT24gYWZmaWNoZSBjZXR0ZSBsaXN0ZSBkYW5zIGxhIHZ1ZSBtZXRob2RlQ2hvaXhBbmFseXNlXHJcbi8vIENlbGEgcGVybWV0IGVuc3VpdGUgZGUgY2xpcXVlciBzdXIgbGVzIGRpZmbDqXJlbnRlcyBvYnNlcnZhdGlvbnMgZXQgw6AgY2hhcXVlIGZvaXMsIMOnYSBmYWl0IHVuZXIgcmVxdWV0ZSBhamF4IChFeHRyYW5ldERlbWFuZGVDb250cm9sbGVyQGFuYWx5c2VTZWxvbk9ic2VydmF0aW9ucylcclxuLy8gQ2V0dGUgcmVxdWV0ZSByZXRvdXJuZSB1biBqc29uIHF1ZSBsJ29uIGFmZmljaGUgZGFucyBsYSB2dWUgb3B0aW9ucy5ibGFkZVxyXG52YXIgY2hvaXNpckZpcnN0ID0gJCgnI2Nob2lzaXJGaXJzdCcpLmF0dHIoJ3Nlc3Npb24nKTtcclxuLy8gSW5pdGlhbGlzZSBsYSBsaXN0ZSBkZXMgb2JzZXJ2YXRpb25zXHJcbnZhciB0YWJsZWF1X29ic2VydmF0aW9ucyA9IFtdO1xyXG52YXIgc2VsZWN0aW9uID0gW107XHJcbi8vIE9uIHLDqWN1cMOpcmUgbCd1cmwgYWN0dWVsbGVcclxudmFyIHVybF9hY3R1ZWxsZSA9IHdpbmRvdy5sb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIHdpbmRvdy5sb2NhdGlvbi5ob3N0ICsgd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lOyAvLyByw6ljdXDDqHJlIGwnYWRyZXNzZSBkZSBsYSBwYWdlIGFjdHVlbGxlXHJcblxyXG4vLyBPbiByw6ljdXDDqHJlIGxlIGhyZWYgb3JpZ2luYWwgZHUgYm91dG9uIGRlIHTDqWzDqWNoYXJnbWVudCBkZSBmb3JtdWxhaXJlIHBvdXIgcG91dm9pciBsZSByZW1ldHRyZSDDoCB6w6lybyBxdWFuZCBvbiBjaGFuZ2UgZCdlc3DDqGNlXHJcbnZhciBocmVmX2luaXRpYWwgPSAkKFwiI2JvdXRvbl9wZGZcIikuYXR0cignaHJlZicpO1xyXG4vLyBPbiByw6ljdXDDqHJlIGwnYWRyZXNzZSBkZXMgaWNvbmVzIGFpbnNpIHF1ZSBsZSBjb250ZW51IGR1IHRvb2x0aXAgcG91ciBsYSByZW1pc2Ugw6AgesOpcm8gZW4gY2hhbmdlbWVudCBkJ2VzcGPDqGNlXHJcbnZhciBzcmNfaW1nX2VzcGVjZSA9ICQoJyNzcmNfaW1nX2VzcGVjZScpLmF0dHIoJ2xpZW4nKTtcclxuXHJcbi8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIElOVFJPRFVDVElPTiAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuLy8gRXhwbGlxdWUgcXUnaWwgZmF1dCBjaG9pc2lyIHVuZSBhbmFseXNlXHJcbi8vIEVmZmFjZSBsJ2V4cGxpY2F0aW9uIGV0IGFmZmljaGUgbGEgbGlzdGUgZGVzIGVzcGVjZXNcclxuJCgnI2Nob2lzaXJFeHBsaWNhdGlvbkJvdXRvbicpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG5cclxuICAkKCcjY2hvaXNpckV4cGxpY2F0aW9uJykuaGlkZSgpO1xyXG5cclxuICAkKCcjY2hvaXNpckVzcGVjZScpLmZhZGVJbigpO1xyXG5cclxufSlcclxuXHJcbiAvLyAjIyMjIyMjIyMjIyMjIyMjIyMjIyMgUFJFTUlFUkUgRVRBUEUgIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcclxuLy8gQWZmaWNoYWdlIGRlcyBhbmFseXNlcyBwcm9wb3PDqWVzIGFwcsOocyBxdSdvbiBhaXQgY2xpcXXDqSBzdXIgbCdpY29uZSBkZSBsJ2VzcGVjZSAoZGFucyBjaG9pc2lyLmJsYWRlLnBocClcclxuJCgnLmVzcGVjZScpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gIC8vIE9uIGVmZmFjZSBsZXMgZmVuw6p0cmUgYWdlc1xyXG4gICQoXCIjYWdlXCIpLmVtcHR5KCk7XHJcbiAgLy8gT24gdmlkZSBsZSBjaGFtcHMgaW5wdXQgYWdlc1xyXG4gICQoXCIjaW5wdXRfYWdlXCIpLnZhbCgnJyk7XHJcblxyXG4gIC8vIE9uIHLDqWluaXRpYWxpc2UgbGUgYm91dG9uIGRlIHTDqWzDqWNoYXJnZW1lbnQgZGUgZmljaGllclxyXG4gICQoJyNib3V0b25fcGRmJykuYXR0cignaHJlZicsIGhyZWZfaW5pdGlhbCk7XHJcbiAgLy8gT24gbW9kaWZpZSBsJ2FmZmljaGFnZSBkZXMgbG9nb3MgZXNwZWNlXHJcbiAgJChcIi5lc3BlY2VcIikuY3NzKCdmaWx0ZXInLCAnb3BhY2l0eSgyMCUpJyk7XHJcbiAgJCh0aGlzKS5jc3MoJ2ZpbHRlcicsICdibHVyKDBweCknKTtcclxuICAvLyBPbiB2aWRlIGxhIGNvbG9ubmUgZCdvcHRpb25zXHJcbiAgdmlkZU9wdGlvbnNBbmFhYWN0ZXMoKTtcclxuICAvLyBPbiBlZmZhY2UgbGVzIGludGVydGl0cmVzIGNvcnJlc3BvbmRhbnQgYXV4IGNhdGVnb3JpZXNcclxuICAkKCcuY2F0ZWdvcmllJykuaGlkZSgpO1xyXG4gIC8vIE9uIHZpZGUgbGEgbGlzdGUgZCdvYnNlcnZhdGlvblxyXG4gICQoJy5saXN0ZV9vYnNlcnZhdGlvbnMnKS5lbXB0eSgpO1xyXG5cclxuICBzZWxlY3Rpb24gPSBbXTtcclxuICAvLyBPbiByw6ljdXDDqHJlIGwnaWQgZGUgbCdlc3BlY2Ugc3VyIGxhcXVlbGxlIG9uIGEgY2xpcXXDqVxyXG4gIHZhciBlc3BlY2VfaWQgPSAkKHRoaXMpLmF0dHIoJ2lkJykuc3BsaXQoJ18nKVsxXTtcclxuICB2YXIgZXNwZWNlX25vbSA9ICQodGhpcykuYXR0cignZXNwZWNlJyk7XHJcblxyXG4gIC8vIE9uIHN0b2NrZSBjZXR0ZSB2YWxldXIgZGFucyB1biBpbnB1dCBoaWRkZW4gcG91ciBsYSBzdWl0ZVxyXG4gICQoXCIjaW5wdXRfZXNwZWNlXCIpLnZhbChlc3BlY2VfaWQpO1xyXG4gIC8vIE9uIHByw6lwYXJlIHVuZSByZXF1ZXRlIGFqYXggc3VyIGxlcyBhZ2VzXHJcbiAgdmFyIHVybCA9IHVybF9hY3R1ZWxsZS5yZXBsYWNlKCdhbmFseXNlcy9jaG9pc2lyJywgJ2FwaS9hZ2VzLycrZXNwZWNlX2lkKTtcclxuICAvLyBSZXF1ZXRlIGFqYXhcclxuICAkLmdldCh7IHVybDogdXJsIH0pXHJcbiAgLmRvbmUoZnVuY3Rpb24oZGF0YSl7XHJcbiAgICB2YXIgYWdlcyA9IEpTT04ucGFyc2UoZGF0YSk7XHJcbiAgICAvLyBTaSBsZSBqc29uIHJlbnZvecOpIHBhciBsYSByZXF1ZXRlICduJ2VzdCBwYXMgdW4gdGFibGVhdSB2aWRlIGMnZXN0IHF1J2lsIHkgYSBkaWZmw6lyZW50ZXMgY2xhc3NlcyBkJ2FnZVxyXG4gICAgaWYoYWdlcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIC8vIE9uIGFqb3V0ZSBsZSB0aXRyZTogQ2hvaXNpciB1biBhZ2VcclxuICAgICAgdmFyIGFqb3V0ID0gJzxkaXYgY2xhc3M9XCJteS0zIHAtM1wiPjxwIGNsYXNzPVwibGVhZFwiPicgKyAkKFwiI2FnZVwiKS5hdHRyKCd0aXRyZScpICsgJzwvcD4nO1xyXG4gICAgICAvLyBPbiBwYXNzZSBlbiByZXZ1ZSBsZSB0YWJsZWF1XHJcbiAgICAgICQuZWFjaChhZ2VzLCBmdW5jdGlvbihrZXksIGxpZ25lcykge1xyXG4gICAgICAgIC8vIEV0IMOgIGNoYXF1ZSBmb2lzIG9uIGFqb3V0ZSB1bmUgaW1hZ2UgY29ycmVzcG9uZGFudCDDoCB1biBhZ2UgZGUgbCdlc3BlY2Ugc8OpbGVjdGlvbm7DqWVcclxuICAgICAgICBham91dCArPSAnPGltZyBpZD1cImFnZXNfJ1xyXG4gICAgICAgICsgbGlnbmVzLmlkXHJcbiAgICAgICAgKyAnXCIgY2xhc3M9XCJhZ2UgaW1nLXpvb20gbXItM1wiIHNyYz1cIidcclxuICAgICAgICArIHNyY19pbWdfZXNwZWNlICsgJy8nICsgbGlnbmVzLmljb25lLm5vbSArICdcIiBhbHQ9XCJhZ2VzXCIgZGF0YS10b2dnbGU9XCJ0b29sdGlwXCIgdGl0bGU9XCInICsgbGlnbmVzLm5vbSArICdcIj4nXHJcbiAgICAgIH0pO1xyXG4gICAgICBham91dCArPSAnPC9kaXY+J1xyXG4gICAgICAvLyBPbiBmYWl0IGwnYWpvdXRcclxuICAgICAgJCgnI2FnZScpLmFwcGVuZChham91dCk7XHJcbiAgICAgIC8vIFB1aXMgbCd1dGlsaXNhdGV1ciBjbGlxdWUgc3VyIHVuZSBkZSBkZXMgaWNvbmVzIGQnYWdlXHJcbiAgICAgICQoXCIuYWdlXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHZhciBhZ2VfaWQgPSAkKHRoaXMpLmF0dHIoJ2lkJykuc3BsaXQoJ18nKVsxXVxyXG4gICAgICAgIC8vIE9uIHBhc3NlIGwnaW5mbyDDoCBsJ2lucHV0IGhpZGRlbiBkdSBmb3JtdWxhaXJlXHJcbiAgICAgICAgJChcIiNpbnB1dF9hZ2VcIikudmFsKGFnZV9pZCk7XHJcbiAgICAgICAgLy8gT24gY2hhbmdlIGwnaWNvbmUgZHUgYm92aW4gcG91ciBzJ2FkYXB0ZXIgYXUgY2hvaXhcclxuICAgICAgICAkKCcjaW1nXycrZXNwZWNlX2lkKS5hdHRyKCdzcmMnLCAkKHRoaXMpLmF0dHIoJ3NyYycpKTtcclxuICAgICAgICAvLyBPbiBham91dGUgbGUgbm9tIGRlIGwnYWdlIMOgIGwnaWNvbmUgZCdvcmlnaW5lXHJcbiAgICAgICAgJCgnI2ltZ18nK2VzcGVjZV9pZCkuYXR0cigndGl0bGUnLCAkKHRoaXMpLmF0dHIoJ3RpdGxlJykpO1xyXG4gICAgICAgIC8vIE9uIHZpZGUgbGUgdGl0cmUgZGUgbGEgcGFnZSBwb3VyIGxlIHJlbXBsYWNlciBwYXIgbGUgbm9tIGRlIGwnYWdlXHJcbiAgICAgICAgJChcIiN0aXRyZVwiKS5lbXB0eSgpLmFwcGVuZCgkKHRoaXMpLmF0dHIoJ3RpdGxlJykpO1xyXG4gICAgICAgIC8vIE9uIGVmZmFjZSBsYSBmZW7DqnRyZSBkZSBjaG9peFxyXG4gICAgICAgICQoXCIjYWdlXCIpLmVtcHR5KCk7XHJcbiAgICAgICAgLy8gb24gYXBwZWxsZSBsYSBmb25jdGlvbiBxdWkgZmFpdCBsYSByZXF1ZXRlIGFqYXggcGVybWV0dGFudCBkJ2FmZmljaGVyIGxlcyBvcHRpb25zXHJcbiAgICAgICAgbGlzdGVPYnNlcnZhdGlvbnMoJ2FnZXMnLCBhZ2VfaWQpO1xyXG4gICAgICB9KTtcclxuICAgICAgLy8gUydpbCBuJ3kgYSBwYXMgZGUgY2xhc3NlIGQnYWdlIGRhbnMgbCdlc3BlY2Ugc8OpbGVjdGlvbm7DqWVcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIE9uIHZpZGUgbGUgdGl0cmUgZGUgbGEgcGFnZSBwb3VyIGxlIHJlbXBsYWNlciBwYXIgbGUgbm9tIGRlIGwnYWdlXHJcbiAgICAgICQoXCIjdGl0cmVcIikuZW1wdHkoKS5hcHBlbmQoZXNwZWNlX25vbSk7XHJcbiAgICAvLyBvbiBhcHBlbGxlIGRpcmVjdGVtZW50IGxhIGZvbmN0aW9uIHF1aSBmYWl0IGxhIHJlcXVldGUgYWpheFxyXG4gICAgICBsaXN0ZU9ic2VydmF0aW9ucygnZXNwZWNlcycsIGVzcGVjZV9pZCk7XHJcbiAgICB9XHJcblxyXG4gIH0pO1xyXG5cclxuICAvLyBPbiByw6ljdXDDqHJlIGwnYWJicmV2aWF0aW9uIGRlIGwnZXNwZWNlIHBvdXIgcG91dm9pciBtb2RpZmllciBsZSBocmVmIGR1IGJvdXRvbiBkZSB0w6lsw6ljaGFyZ2VtZW50IGR1IGZvcm11bGFpcmVcclxuICB2YXIgZXNwZWNlX2FiYnJldmlhdGlvbiA9ICQodGhpcykuYXR0cignbmFtZScpO1xyXG4gIHZhciBocmVmID0gaHJlZl9pbml0aWFsLnJlcGxhY2UoJ2VzcGVjZScsIGVzcGVjZV9hYmJyZXZpYXRpb24pO1xyXG4gICQoJyNib3V0b25fcGRmJykuYXR0cignaHJlZicsIGhyZWYpO1xyXG5cclxuICB2YXIgb2JzZXJ2YXRpb25faWQgPSAnJztcclxuICAvLyBPbiByw6lpbml0aWFsaXNlIGxlIHRhYmxlYXUgZGUgb2JzZXJ2YXRpb25zIHPDqWxlY3Rpb25uw6llc1xyXG4gIHRhYmxlYXVfb2JzZXJ2YXRpb25zID0gW107XHJcbiAgLy8gT24gcmVtZXQgw6AgesOpcm8gbGUgbnVtw6lybyBkJ29ic2VydmF0aW9uIHF1aSBzZXJhaXQgc8OpbGVjdGlvbm7DqVxyXG4gICQoJy5saXN0ZV9vYnNlcnZhdGlvbnMnKS5lYWNoKGZ1bmN0aW9uKGtleSx2YWx1ZSkge1xyXG4gICAgc2VsZWN0aW9uLnB1c2gobnVsbCk7XHJcbiAgfSlcclxufSk7XHJcblxyXG4vLyBGb25jdGlvbiBxdWkgcmVxdWV0ZSBhamF4IGF2ZWMgbCdlc3BlY2VfaWQgKEV4dHJhbmV0RGVtYW5kZUNvbnRyb2xsZXJAb2JzZXJ2YXRpb25TZWxvbkVzcGVjZSlcclxuLy8gRXQgYWZmaWNoZSBsZSByw6lzdWx0YXQgc291cyBsYSBmb3JtZSBkJ3VuZSBsaXN0ZSBkJ29ic2VydmF0aW9ucyBhdmVjIHRyb2lzIHByb3ByacOpdMOpcyBxdWFuZCBvbiBjbGlxdWU6XHJcbi8vIDEpIMOnYSBtZXQgbCdvYnNlcnZhdGlvbiBlbiBjb3VsZXVyXHJcbi8vIDIpIGNlbGEgZXhwYW5kIGwnYWZmaWNoYWdlIHBvdXIgbW9udHJlciBsJ2V4cGxpY2F0aW9uIGV0IGxlcyBhdXRyZXMgb3JpZ2luZXNcclxuLy8gMykgw6dhIGNvbXBsZXRlIGxhIGxpc3RlIGRlcyBvYnNlcnZhdGlvbnMgY2xpcXXDqWVzIGV0IMOnYSBmYWl0IHVuZSByZXF1ZXRlIGFqYXggcG91ciBhZmZpY2hlciBsYSBsaXN0ZSBkZXMgYW5hbHlzZXNcclxuZnVuY3Rpb24gbGlzdGVPYnNlcnZhdGlvbnModHlwZSwgaWQpIHtcclxuICAvLyBhZmZpY2hlIGxlIHNvdXN0aXRyZSBldCBvbiBsdWkgZG9ubmUgbCdhdHRyaWJ1dCBlc3BlY2UgYXZlYyBsJ2VzcGVjZV9pZCBjb21tZSB2YWxldXIgcG91ciBsYSByZXF1ZXRlIGFqYXggc3VpdmFudGVcclxuICAkKFwiI3RpdHJlX29ic2VydmF0aW9uc1wiKS5mYWRlSW4oKVxyXG4gIC8vIE9uIGFmZmljaGUgbGUgdHV0b1xyXG4gIGlmKGNob2lzaXJGaXJzdCkge1xyXG5cclxuICAgICQoXCIjY2hvaXNpclR1dG9cIikuZmFkZUluKCk7XHJcblxyXG4gICAgY2hvaXNpckZpcnN0ID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICAvLyBPbiBtb2RpZmllIGwndXJsIHBvdXIgcG91dm9pciBmYWlyZSBsYSByZXF1ZXRlXHJcbiAgdmFyIHVybCA9IHVybF9hY3R1ZWxsZS5yZXBsYWNlKCdhbmFseXNlcy9jaG9pc2lyJywgJ2FwaS9vYnNlcnZhdGlvbnMvJyt0eXBlKycvJytpZCk7XHJcblxyXG4gICQuZ2V0KHtcclxuICAgIHVybDp1cmxcclxuICB9KVxyXG4gIC5kb25lKGZ1bmN0aW9uKGRhdGFzKSB7XHJcbiAgICBpZihkYXRhcyAhPSBudWxsKSB7XHJcbiAgICAgIGxpZ25lcyA9IEpTT04ucGFyc2UoZGF0YXMpO1xyXG4gICAgICAkKCcuY2F0ZWdvcmllJykuZmFkZUluKCk7XHJcbiAgICAgICQuZWFjaChsaWduZXMsIGZ1bmN0aW9uKGtleSwgbGlnbmUpIHtcclxuICAgICAgICAvLyBsYSBjcmVhdGlvbiBkZSBsYSB2YXJpYWJsZSBhdXRyZSBlc3QgZGVzdGluw6llIMOgIG5lIHJpZW4gYWZmaWNoZXIgcXVhbmQgbGEgdmFsZXVyIGRlIGxpZ25lLmF1dHJlcyBlc3QgbnVsbFxyXG4gICAgICAgIHZhciBhdXRyZXMgPSAobGlnbmUuYXV0cmVzID09IG51bGwpID8gJyc6ICc8cCBjbGFzcz1cIm1sLTMgbWItMCBwLTEgcGwtMiBib3JkdXJlLWVwYWlzc2VcIj48aT5BdXRyZXMgY2F1c2VzJm5ic3A7OiA8L2k+JyArIGxpZ25lLmF1dHJlcyArICc8L3A+JztcclxuICAgICAgICAvLyBPbiBham91dGUgbGEgbGlzdGUgZGVzIG9ic2VydmF0aW9uc1xyXG4gICAgICAgICQoXCIjY2F0ZWdvcmllX1wiICsgbGlnbmUuY2F0ZWdvcmllX2lkKS5hcHBlbmQoXHJcbiAgICAgICAgICAnPGRpdiBpZD1cImNhcmRfJyArIGxpZ25lLmlkICsgJ1wiIGNsYXNzPVwiY2FyZCBib3JkZXJsZXNzXCIgY2F0ZWdvcmllPVwiJytsaWduZS5jYXRlZ29yaWVfaWQrJ1wiPicrXHJcbiAgICAgICAgICAgICc8ZGl2IGlkPVwib2JzZXJ2YXRpb25fJyArIGxpZ25lLmlkICsgJ1wiIGNsYXNzPVwiY2FyZC1oZWFkZXIgb2JzZXJ2YXRpb24gbGlzdC1ncm91cC1pdGVtIGxpc3QtZ3JvdXAtaXRlbS1hY3Rpb24gZGlzYWJsZWQgcG9pbnRldXJcIiBzZWxlY3Rpb249XCJub25cIiA+JyArXHJcbiAgICAgICAgICAgICAgICAgIGxpZ25lLmludGl0dWxlICtcclxuICAgICAgICAgICAgJzwvZGl2PicgK1xyXG4gICAgICAgICAgICAnPGRpdiBpZD1cImV4cGxpY2F0aW9uXycgKyBsaWduZS5pZCArICdcIiBjbGFzcz1cImNvbGxhcHNlIGJnLWJsZXUtdHJlcy1jbGFpclwiPicgK1xyXG4gICAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiY2FyZC1ib2R5IHNtYWxsXCI+JyArXHJcbiAgICAgICAgICAgICAgICAnPHAgY2xhc3M9XCJtbC0zIG1iLTAgcC0xIHBsLTIgYm9yZHVyZS1lcGFpc3NlXCI+JyArIGxpZ25lLmV4cGxpY2F0aW9uICsgJzwvcD4nICtcclxuICAgICAgICAgICAgICAgIGF1dHJlcyArXHJcbiAgICAgICAgICAgICAgJzwvZGl2PicgK1xyXG4gICAgICAgICAgICAnPC9kaXY+JyArXHJcbiAgICAgICAgICAnPC9kaXY+J1xyXG4gICAgICAgICk7XHJcbiAgICAgIH0pO1xyXG4gICAgfTtcclxuICB9KVxyXG4gIC5mYWlsKGZ1bmN0aW9uKGRhdGFzKSB7XHJcbiAgICBjb25zb2xlLmxvZygnRVJSRVVSOiAnK2RhdGFzKTtcclxuICB9KVxyXG59XHJcblxyXG5cclxuLy8gIyMjIyMjIyMjIyMjIyMjIyBERVVYSUVNRSBFVEFQRSAjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4vLyBRdWFuZCBvbiBjbGlxdWUgc3VyIGxlcyBvYnNlcnZhdGlvbnNcclxuJChcIi5saXN0ZV9vYnNlcnZhdGlvbnNcIikub24oJ2NsaWNrJywgXCIuY2FyZFwiLCBmdW5jdGlvbigpIHtcclxuICAvLyBPbiByw6ljdXDDqHJlIGwnaWQgZGUgbGEgY2FyZCBxdWkgZW5nbG9iZSBvYnNlcnZhdGlvbiBldCBleHBsaWNhdGlvbiBjbGlxdcOpZVxyXG4gIHZhciBpZCA9ICQodGhpcykuYXR0cignaWQnKS5zcGxpdCgnXycpWzFdO1xyXG4gIHZhciBvYnNlcnZhdGlvbl9pZCA9ICcjb2JzZXJ2YXRpb25fJyArIGlkO1xyXG4gIHZhciBleHBsaWNhdGlvbl9pZCA9ICcjZXhwbGljYXRpb25fJyArIGlkO1xyXG4gIHZhciBlc3RTZWxlY3Rpb24gPSAkKG9ic2VydmF0aW9uX2lkKS5hdHRyKCdzZWxlY3Rpb24nKTtcclxuICAvLyBPbiByw6ljdXDDqHJlIGxhIGNhdMOpZ29yaWVcclxuICB2YXIgY2F0ZWdvcmllX2lkID0gJCh0aGlzKS5wYXJlbnQoKS5hdHRyKCdpZCcpO1xyXG4gIHZhciBpZF9jYXRlZ29yaWUgPSBjYXRlZ29yaWVfaWQuc3BsaXQoJ18nKVsxXTtcclxuXHJcbi8vIFNVUiBMQSBDT0xPTk5FIE9CU0VSVkFUSU9OUzpcclxuICBpZihlc3RTZWxlY3Rpb24gPT0gXCJvdWlcIikge1xyXG5cclxuICAgIGluYWN0aXZlT2JzZXJ2YXRpb24oaWQpO1xyXG4gICAgLy8gT24gc3VwcHJpbWUgY2V0dGUgdmFsZXVyIGR1aSB0YWJsZWF1IHNlbGVjdGlvblxyXG4gICAgc2VsZWN0aW9uW2lkX2NhdGVnb3JpZS0xXSA9IG51bGw7XHJcblxyXG4gIH0gZWxzZSBpZihlc3RTZWxlY3Rpb24gPT0gXCJub25cIikge1xyXG4gICAgLy8gT24gcGFzc2UgbCdhdHRyaWJ1dCBzZWxlY3Rpb24gw6AgdHJ1ZVxyXG4gICAgLy8gU2kgdW5lIG9ic2VydmF0aW9uIGRlIGNldHRlIGNhdMOpZ29yaWUgZXN0IHByw6lzZW50ZSBkYW5zIGxlIHRhYmxlYXUgc2VsZWN0aW9uIChjYWQgYSDDqXTDqSBzw6lsZWN0aW9ubsOpZSBhdmFudClcclxuICAgIGlmKHNlbGVjdGlvbltpZF9jYXRlZ29yaWUtMV0gIT0gbnVsbCkgeyAvLyBMZSBpZF9jYXRlZ29yaWUtMSBlc3QgZHUgYXUgZmFpdCBxdWUgbCdhcnJheSBzZWxlY3Rpb24gaW5kaWNlIMOgIDAgdGFuZGlzIHF1ZSBsZXMgYmRkIGNvbW1lbmNlbnQgw6AgMVxyXG4gICAgICB2YXIgaWRfb2JzZXJ2YXRpb25fYWN0aXZlID0gc2VsZWN0aW9uW2lkX2NhdGVnb3JpZS0xXTtcclxuICAgICAgLy8gT24gaW5hY3RpdmUgbCdvYnNlcnZhdGlvbiAoZmVybWVyIGxlIGNvbGxhcHNlLCBlbmxldmVyIGxhIGNvdWxldXIpXHJcbiAgICAgIGluYWN0aXZlT2JzZXJ2YXRpb24oaWRfb2JzZXJ2YXRpb25fYWN0aXZlKTtcclxuICAgIH1cclxuICAgIC8vIFB1aXMgb24gaW5zY3JpdCBsYSBub3V2ZWxsZSBvYmJzZXJ2YXRpb24gY2xpcXXDqWUgZGFucyBsZSB0YWJsZWF1IHNlbGVjdGlvblxyXG4gICAgc2VsZWN0aW9uW2lkX2NhdGVnb3JpZS0xXSA9IGlkOyAvLyBMZSBcIi0xXCIgZXN0IGTDuyBhdSBmYWl0IHF1ZSBsZXMgaWQgZGVzIGNhdMOpZ29yaWVzIGNvbW1lbmNlbnQgw6AgMSB0YW5kaXMgcXVlIGwnaW5kZXggZHUgdGFibGVhdSDDoCAwXHJcbiAgICBhY3RpdmVPYnNlcnZhdGlvbihpZCk7XHJcbiAgfVxyXG5cclxuICAvLyBPTiBFRkZBQ0UgVE9VVEUgTEEgQ09MT05ORSBPUFRJT05TOlxyXG4gIHZpZGVPcHRpb25zQW5hYWFjdGVzKCk7XHJcblxyXG4gIC8vIE9uIHN0b2NrZSBsYSBzw6lsZWN0aW9uIGRhbnMgbGVzIGlucHV0IHBvdXIgbGEgdHJhbnNtaXNzaW9uIGFqYXhcclxuICAkLmVhY2goc2VsZWN0aW9uLCBmdW5jdGlvbihrZXksdmFsdWUpIHtcclxuICAgIHZhciBpbmRpY2UgPSBrZXkgKyAxO1xyXG4gICAgJChcIiNpbnB1dF9cIiArIGluZGljZSkudmFsKHZhbHVlKTtcclxuICB9KVxyXG5cclxuICAvLyBPbiBhcHBlbGxlIGxhIGZvbmN0aW9uIGxpc3RlT3B0aW9ucyBxdWkgZmFpdCB1bmUgcmVxdWV0ZSBwb3N0IGR1IGZvcm11bGFpcmUgY2FjaMOpIChFeHRyYW5ldERlbWFuZGVDb250cm9sbGVyQG9wdGlvbnNTZWxvbk9ic2VydmF0aW9ucylcclxuICBsaXN0ZU9wdGlvbnMoKTtcclxuICAvLyBFdCBvbiByZW1vbnRlIGxlIHNjcm9sbCBqdXN0ZSBzb3VzIGxhIGxpZ25lIGRlcyBlc3BlY2VzXHJcbiAgd2luZG93LnNjcm9sbFRvKDIwMCwyNTApO1xyXG59KTtcclxuXHJcbi8vIEZlcm1lIGxlIHR1dG8gc2kgb24gY2xpcXVlIHN1ciBsYSBwZXRpdGUgc291cmlzXHJcbiQoJyNhdm91c2Rlam91ZXInKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuXHJcbiAgJCgnI2Nob2lzaXJUdXRvJykuZmFkZU91dCgpO1xyXG5cclxuICAgIHdpbmRvdy5zY3JvbGxUbygyMDAsMjUwKTtcclxuXHJcbn0pXHJcbi8vIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4vLyBGT05DVElPTlMgLy9cclxuLy8jIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1xyXG4vLyBGb25jdGlvbiBxdWkgcGFzc2UgZW4gZGlzcGxheTpibG9jayBsZXMgb3B0aW9ucyBldCBsZXMgYW5hbHlzZXMgc8OpbGVjdGlvbm7DqWVzXHJcbmZ1bmN0aW9uIGxpc3RlT3B0aW9ucygpIHtcclxuXHJcbiAgICB2YXIgdXJsX2FjdHVlbGxlID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICsgd2luZG93LmxvY2F0aW9uLmhvc3QgKyB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWU7IC8vIHLDqWN1cMOocmUgbCdhZHJlc3NlIGRlIGxhIHBhZ2UgYWN0dWVsbGVcclxuICAgIC8vIE9uIG1vZGlmaWUgbCd1cmwgcG91ciBwb3V2b2lyIGZhaXJlIGxhIHJlcXVldGVcclxuICAgIHZhciB1cmwgPSB1cmxfYWN0dWVsbGUucmVwbGFjZSgnYW5hbHlzZXMvY2hvaXNpcicsICdhcGkvb3B0aW9ucycpO1xyXG4gICAgJChcIiNjaG9pc2lyVHV0b1wiKS5oaWRlKCk7XHJcblxyXG4gICAgJC5wb3N0KHtcclxuICAgICAgdXJsIDogdXJsLFxyXG4gICAgICBkYXRhOiAkKCdmb3JtJykuc2VyaWFsaXplKCksIC8vIG9uIHBhc3NlIGxlIGZvcm11bGFpcmUgY2FjaMOpXHJcbiAgICAgIGRhdGF0eXBlOiAnanNvbidcclxuICAgIH0pXHJcbiAgICAuZG9uZShmdW5jdGlvbihkYXRhcykge1xyXG4gICAgICBpZihkYXRhcyAhPSBudWxsKSB7IC8vIFNpIGRlcyBkb25uw6llcyBzb250IHJldmVudWVzIChjZSBxdWkgZG9pdCDDqnRyZSBzeXN0w6ltYXRpcXVlbWVudCBsZSBjYXMpXHJcbiAgICAgICAgdmFyIG9wdGlvbnMgPSBKU09OLnBhcnNlKGRhdGFzKS5vcHRpb25zOyAvLyBPbiByw6ljdXDDqHJlIGxlIHRhYmxlYXUgb3B0aW9ucyAoMiBvcHRpb25zIG1heClcclxuICAgICAgICB2YXIgYW5hYWN0ZXMgPSBKU09OLnBhcnNlKGRhdGFzKS5hbmFhY3RlczsgLy8gb24gcsOpdnVww6hyZSBsZSB0YWJsZWF1IGFuYWFjdGVzICgyIGFuYWFjdGVzIG1heClcclxuXHJcbiAgICAgICAgaWYobm9tYnJlU2VsZWN0aW9ucyhzZWxlY3Rpb24pID4gMCkgeyAvLyBTJ2lsIHkgYSBhdSBtb2lucyB1bmUgc8OpbGVjdGlvblxyXG5cclxuICAgICAgICAgIGlmKG9wdGlvbnMubGVuZ3RoID09IDApIHsgLy8gTWFpcyBxdWUgbGUgdGFibGVhdSBvcHRpb24gZXN0IHZpZGUsIG9uIGFmZmljaGUgdW4gbWVzc2FnZSBxdSdpbCBuJ3kgYSBwYXMgZCdhbmFseXNlXHJcblxyXG4gICAgICAgICAgICAkKCcjYXVjdW5lX29wdGlvbicpLnNob3coKTtcclxuXHJcblxyXG4gICAgICAgICAgfSBlbHNlIHsgLy8gTWFpcyBzaSBsZSB0YWJsZWF1IG9wdGlvbiBuJ2VzdCBwYXMgdmlkZSwgb24gYWZmaWNoZSBsZXMgb3B0aW9ucyBldCBhbmFhY3RlcyBjb3JyZXBvbmRhbnRzXHJcblxyXG4gICAgICAgICAgICAkLmVhY2gob3B0aW9ucywgZnVuY3Rpb24oa2V5LCB2YWx1ZSkgeyAvLyBBZmZpY2hhZ2UgZGVzIG9wdGlvbnNcclxuICAgICAgICAgICAgICAkKCcjJyArIHZhbHVlICsgJy5vcHRpb24nKS5mYWRlSW4oKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgaWYoYW5hYWN0ZXMubGVuZ3RoID09IDEpIHsgLy8gQWZmaWNoYWdlIGQndW4gdGl0cmUgZCdhbmFseXNlcyBkaWZmw6lyZW50IHMnaWwgeSBlbiBhIHVuZSBvdSBkZXV4XHJcbiAgICAgICAgICAgICAgJCgnI3VuZScpLmZhZGVJbigpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICQoJyNkZXV4JykuZmFkZUluKCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICQuZWFjaChhbmFhY3RlcywgZnVuY3Rpb24oa2V5LCB2YWx1ZSkgeyAvLyBBZmZpY2hhZ2UgZGVzIGFuYWx5c2VzXHJcbiAgICAgICAgICAgICAgJCgnI2FuYWFjdGVfJyArIHZhbHVlKS5mYWRlSW4oKTtcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgICQoJyNib3V0b25zJykuZmFkZUluKDEwMDApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgJCgnI3BlbnNlcl92ZXRvJykuZmFkZUluKDMwMDApOyAvLyBFdCBsZSB2w6l0b1xyXG5cclxuICAgICAgICAgIGlmKCQoXCIjaW5wdXRfZXNwZWNlXCIpLnZhbCgpPT0gNSApIHtcclxuICAgICAgICAgICAgJCgnI2F1dHJlc19hbmFseXNlcycpLmZhZGVJbigyMDAwKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfSBlbHNlIHsgLy8gU2kgaWwgbid5IGF1Y3VuZSBvYnNlcnZhdGlvbiBzw6lsw6ljdGlvbm7DqWUsIG9uIGVmZmFjZSB0b3V0XHJcblxyXG4gICAgICAgICAgdmlkZU9wdGlvbnNBbmFhYWN0ZXMoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICB9XHJcblxyXG4gICAgfSlcclxuICAgIC5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcclxuICAgICAgY29uc29sZS5sb2coZGF0YSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gdmlkZU9wdGlvbnNBbmFhYWN0ZXMoKSB7XHJcblxyXG4gIC8vIE9uIG1hc3F1ZSBsZSBwYW5uZWF1IHZldG9cclxuICAkKFwiI3BlbnNlcl92ZXRvXCIpLmhpZGUoKTtcclxuICAkKFwiI2F1dHJlc19hbmFseXNlc1wiKS5oaWRlKCk7XHJcbiAgJCgnI2JvdXRvbnMnKS5oaWRlKCk7XHJcbiAgLy8gT24gbWFzcXVlIGxhIGxpc3RlIGQnb3B0aW9uc1xyXG4gICQoJy5vcHRpb24nKS5oaWRlKCk7XHJcbiAgJCgnLmFuYWFjdGUnKS5oaWRlKCk7XHJcbiAgLy8gT24gbWFzcXVlIGxlIHRpdHJlIGRlcyBhbmFseXNlcyBwcm9wb3PDqWVzXHJcbiAgJChcIi50aXRyZV9hbmFseXNlc1wiKS5oaWRlKCk7XHJcbiAgLy8gT24gdmlkZSBsZSAwIG9wdGlvblxyXG4gICQoJyNhdWN1bmVfb3B0aW9uJykuaGlkZSgpO1xyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gaW5hY3RpdmVPYnNlcnZhdGlvbihpZCkge1xyXG4gICQoXCIjb2JzZXJ2YXRpb25fXCIgKyBpZCkuYXR0cignc2VsZWN0aW9uJywgJ25vbicpO1xyXG4gICQoXCIjb2JzZXJ2YXRpb25fXCIgKyBpZCkudG9nZ2xlQ2xhc3MoJ2FjdGl2ZScpLnRvZ2dsZUNsYXNzKCdkaXNhYmxlZCcpO1xyXG4gICQoXCIjZXhwbGljYXRpb25fXCIgKyBpZCkucmVtb3ZlQ2xhc3MoJ3Nob3cnKTtcclxuXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFjdGl2ZU9ic2VydmF0aW9uKGlkKSB7XHJcbiAgJChcIiNvYnNlcnZhdGlvbl9cIiArIGlkKS5hdHRyKCdzZWxlY3Rpb24nLCAnb3VpJyk7XHJcbiAgJChcIiNvYnNlcnZhdGlvbl9cIiArIGlkKS50b2dnbGVDbGFzcygnYWN0aXZlJykudG9nZ2xlQ2xhc3MoJ2Rpc2FibGVkJyk7XHJcbiAgJChcIiNleHBsaWNhdGlvbl9cIiArIGlkKS5hZGRDbGFzcygnc2hvdycpO1xyXG5cclxufVxyXG5cclxuZnVuY3Rpb24gbm9tYnJlU2VsZWN0aW9ucyhzZWxlY3Rpb24pIHtcclxuXHJcbiAgdmFyIGxvbmd1ZXVyX3NlbGVjdGlvbiA9IDBcclxuICBzZWxlY3Rpb24uZm9yRWFjaChmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgbG9uZ3VldXJfc2VsZWN0aW9uICs9ICh2YWx1ZSA9PSBudWxsKSA/IDAgOiAxO1xyXG4gIH0pO1xyXG5cclxuICByZXR1cm4gbG9uZ3VldXJfc2VsZWN0aW9uO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/choisir.js\n");

/***/ }),

/***/ 3:
/*!***************************************!*\
  !*** multi ./resources/js/choisir.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /mnt/c/Users/33683/www/parasitlab/resources/js/choisir.js */"./resources/js/choisir.js");


/***/ })

/******/ });