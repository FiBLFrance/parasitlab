/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./resources/js/createDemande.js":
/*!***************************************!*\
  !*** ./resources/js/createDemande.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("__webpack_require__(/*! ./createDemandeGeneral.js */ \"./resources/js/createDemandeGeneral.js\");\n\n__webpack_require__(/*! ./createDemandeTypeActe.js */ \"./resources/js/createDemandeTypeActe.js\");\n\n__webpack_require__(/*! ./createDemandePrelevementVeto */ \"./resources/js/createDemandePrelevementVeto.js\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvY3JlYXRlRGVtYW5kZS5qcz81YzI0Il0sIm5hbWVzIjpbInJlcXVpcmUiXSwibWFwcGluZ3MiOiJBQUNBQSxtQkFBTyxDQUFDLHlFQUFELENBQVA7O0FBRUFBLG1CQUFPLENBQUMsMkVBQUQsQ0FBUDs7QUFFQUEsbUJBQU8sQ0FBQyxzRkFBRCxDQUFQIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL2NyZWF0ZURlbWFuZGUuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxucmVxdWlyZSgnLi9jcmVhdGVEZW1hbmRlR2VuZXJhbC5qcycpXHJcblxyXG5yZXF1aXJlKCcuL2NyZWF0ZURlbWFuZGVUeXBlQWN0ZS5qcycpXHJcblxyXG5yZXF1aXJlKCcuL2NyZWF0ZURlbWFuZGVQcmVsZXZlbWVudFZldG8nKVxyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/createDemande.js\n");

/***/ }),

/***/ "./resources/js/createDemandeGeneral.js":
/*!**********************************************!*\
  !*** ./resources/js/createDemandeGeneral.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Diverses fonction utilisées lors du remplissage du formulaire de nouvelle demande d'analyse\n$('#userSelect').focus();\n$('.liste_anatypes').hide(); // On récupére l'url actuelle\n\nvar url_actuelle = window.location.protocol + \"//\" + window.location.host + window.location.pathname; // récupère l'adresse de la page actuelle\n\nvar choix_user = false; // On initialise ces deux variables qui serviron à savoir ce qui a été sélectionné ou pas en cas d'une navigation désordonnée\n\nvar choix_espece = false; // Fonction destinée a renvoyer vers la page de création d'un utilisateur si la ligne\"nouveau\" est choisie\n\n$(\"select[name='userDemande']\").change(function () {\n  $('.listeSerie').remove(); // on enlève une éventuelle référence à une série\n\n  $('#anatypeSelect').removeClass('is-invalid'); // Cas ou l'utilisateur a essayé de choisir un anatype sans choix préalable d'un user\n\n  $('#typeAlerte').hide();\n\n  if ($(\"select[name='userDemande'] > option:selected\").val() == \"Nouveau\") {\n    // S'il sagit d'un nouvel éleveur\n    var option = $(\"select[name='userDemande'] > option:selected\");\n    var url_nouvelle = url_actuelle.replace('demandes', 'user');\n    $.confirm({\n      theme: 'dark',\n      type: 'red',\n      typeAnimated: 'true',\n      title: option.attr('titre'),\n      content: option.attr('texte'),\n      buttons: {\n        oui: {\n          text: 'oui',\n          btnClass: 'btn-red',\n          action: function action() {\n            window.location = url_nouvelle;\n          }\n        },\n        non: function non() {}\n      }\n    });\n  } else {\n    // Si on fait le choix d'un utilisateur déjà existant\n    choix_user = $('#userSelect > options:selected').attr('id'); // On rempli la variable\n\n    $(this).removeClass('is-invalid').addClass('is-valid'); // On passe le rouge au vert\n\n    if (!choix_espece) {\n      // Si l'espece n'a pas encore été choisie on met le focus sur elle\n      $('#especeSelect').focus();\n    } else {\n      // sinon  on la passe en vert\n      $('#especeSelect').addClass('is-valid');\n      anatypeSelonEspece(choix_espece); // On remplit le champs anatype\n\n      $('#prelevement').focus(); // On passe le focus à la date de prélèvement\n    }\n  }\n}); //################################################################################################\n// Liste des anaactes en fonction de l'anatype sélectionné\n// Puis à chaque changement d'espece on met à jour la liste tes types\n\n$('#especeSelect').on('change', function () {\n  choix_espece = $('#especeSelect > option:selected').attr('id');\n\n  if ($('#userSelect > option:selected').val() == '') {\n    // si l'utilisateur n'a pas été sélectionné on met le focus sur lui\n    $('#userSelect').focus().addClass('is-invalid');\n    $('.liste_anatypes').hide();\n  } else {\n    // Sinon\n    var espece_nom = $('#especeSelect > option:selected').attr('id'); // on récupère l'espce choisie dans la variable espece_nom\n\n    $(this).addClass('is-valid');\n    $(\"#prelevement\").focus(); // On saute à la date de prélèvement\n\n    anatypeSelonEspece(espece_nom);\n  }\n}); // A la sélection d'une date on passe au champs suivant\n\n$('#prelevement').on('change', function () {\n  $('.date_alerte').hide();\n  id_actuel = '#' + $(this).attr('id');\n  var dateChoix = Date.parse($(this).val());\n  validDate(dateChoix, id_actuel, '#reception');\n  compareDate();\n});\n$('#reception').on('change', function () {\n  $('.date_alerte').hide();\n  id_actuel = '#' + $(this).attr('id');\n  var dateChoix = Date.parse($(this).val());\n  validDate(dateChoix, id_actuel, '#anatypeSelect');\n  compareDate();\n}); // Fonction destinée à valider les dates\n\nfunction validDate(dateChoix, id_actuel, id_next) {\n  $('.date_alerte').hide(); // On efface les alertes\n\n  var aujourdhui = Date.now(); // On cacule le timestamp du jour\n\n  if (aujourdhui - dateChoix < 0) {\n    // Si la différence la date choisie est dans le futurœ\n    $(id_actuel + '_futur').show(); //On afiche une petit phrase\n  } else if (aujourdhui - dateChoix > 864000000) {\n    // Si elle est plus ancienne que 10 jours\n    $(id_actuel + '_passe').show(); // On affiche une autre phrase\n  } else {\n    // Sinon\n    $(id_actuel + '_ok').show();\n    $(id_next).focus(); // On passe au champs suivant\n  }\n}\n\n;\n\nfunction compareDate() {\n  if ($('#prelevement').val() !== '' && $('#reception').val() !== '') {\n    var date_prelevement = Date.parse($('#prelevement').val());\n    var date_reception = Date.parse($('#reception').val());\n\n    if (date_reception - date_prelevement < 0) {\n      $('.date_ok').hide();\n      $('#reception_prelevement').show();\n    } else {\n      $('.date_ok').show();\n    }\n  }\n}\n\nfunction anatypeSelonEspece(espece_nom) {\n  var url = url_actuelle.replace('laboratoire/demandes/create', 'api/anatypes/' + espece_nom);\n  $.get({\n    url: url\n  }).done(function (data) {\n    var valeurs = JSON.parse(data);\n    $(\".liste_anatypes\").hide();\n    $.each(valeurs, function (key, value) {\n      $(\"#anatypes_\" + value).show();\n    });\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/createDemandeGeneral.js\n");

/***/ }),

/***/ "./resources/js/createDemandePrelevementVeto.js":
/*!******************************************************!*\
  !*** ./resources/js/createDemandePrelevementVeto.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("//###################################################################################################\n// Modifie le nombre de ligne de prélèvement en fonction de la valeur de l'input\nvar nbPrelevements = $(\"input[name='nbPrelevements']\").val(); // nombre de prélèvement\n// Boucle qui passe en revue chaque ligne est l'affiche si son index est inférieur au nombre de prélèvements\n\n$('.lignePrelevement').each(function (index) {\n  if (index < nbPrelevements) {\n    $('#lignePrelevement_' + (index + 1)).removeClass('d-none').addClass('d-flex');\n    var identification = 'identification_' + (index + 1);\n    $(\"input[name=\" + identification + \"]\").attr('required', true);\n  }\n}); // Idem quand on change la valeur de l'input nb de prélèvements\n\n$(\"input[name='nbPrelevements']\").on('change', function (e) {\n  nbPrelevements = $(\"input[name='nbPrelevements']\").val();\n  $(\".lignePrelevement\").removeClass('d-flex').addClass('d-none');\n  $(\".identification\").attr('required', false);\n  $('.lignePrelevement').each(function (index) {\n    if (index < nbPrelevements) {\n      $('#lignePrelevement_' + (index + 1)).removeClass('d-none').addClass('d-flex');\n      var identification = 'identification_' + (index + 1);\n      $(\"input[name=\" + identification + \"]\").attr('required', true);\n    }\n  });\n}); //##########################################################################################################\n//#########################################################################################################\n// Affiche la liste des vétos si sitch \"envoi to véto\" est sur emitter.on('event', (arguments) => {\n\nvar toVeto = $('#toVeto').prop('checked');\n\nfunction afficheListeVeto(auVeto) {\n  if (!auVeto) {\n    $('#choixDuVeto').addClass('d-none').removeClass('d-block'); // liste déroulante des vétos\n\n    $('#iconeVeto').removeClass('d-none').addClass('d-block'); // icone veto pour remplacer quand la liste déroulante est masquée\n    //(pour éviter de faire bouger les boutons en dessous)\n  } else {\n    $('#choixDuVeto').removeClass('d-none').addClass('d-block');\n    $('#iconeVeto').addClass('d-none').removeClass('d-block');\n  }\n}\n\n; // au démarrage l'affiche du véto dépend de la position d'origine du switch\n\nafficheListeVeto($('#toVeto').prop('checked')); // au changement de switch on change l'affichage\n\n$('#toVeto').on('change', function () {\n  afficheListeVeto($('#toVeto').prop('checked'));\n}); //############################################################################################################\n//#############################################################################################################\n// Change le bouton radio de choix de l'envoi de la facture\n\n$('#radioBtn a').on('click', function () {\n  var sel = $(this).data('title');\n  var tog = $(this).data('toggle');\n  $('#' + tog).prop('value', sel);\n  $('a[data-toggle=\"' + tog + '\"]').not('[data-title=\"' + sel + '\"]').removeClass('active').addClass('notActive');\n  $('a[data-toggle=\"' + tog + '\"][data-title=\"' + sel + '\"]').removeClass('notActive').addClass('active');\n}); //#################################################################################################################//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/createDemandePrelevementVeto.js\n");

/***/ }),

/***/ "./resources/js/createDemandeTypeActe.js":
/*!***********************************************!*\
  !*** ./resources/js/createDemandeTypeActe.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// On récupére l'url actuelle\nvar url_actuelle = window.location.protocol + \"//\" + window.location.host + window.location.pathname; // récupère l'adresse de la page actuelle\n// FONCTION DESTINEE A CHOISIR L'ANAACTE EN FONCTION DE L'ANATYPE: AU DÉMARRAGE PUIS À CHAQUE CHANGEMENT\n// on initialise la liste de anaactes avec l'anatype par défaut\n\nvar anatype_id = $(\"#anatypeSelect > option:selected\").val(); // On efface le bloc estSerie\n\nrequeteAnaactes(anatype_id);\n$('#anatypeSelect').on('focus', function () {\n  if ($('#userSelect > option:selected').val() == '') {\n    $(this).addClass('is-invalid');\n    $('#typeAlerte').show();\n    $('#userSelect').focus();\n  }\n});\n$('#anatypeSelect').on('change', function () {\n  var anatype_id = $(this).children(\"option:selected\").val();\n  requeteAnaactes(anatype_id);\n  $(this).addClass('is-valid');\n  $('#anaacteSelect').focus();\n}); // Modifie le liste des anaactes en fonction du choix de l'anatype\n\nfunction requeteAnaactes(anatype_id) {\n  $('#premierPrelevementSerie').val(null);\n  $('#estSerie').addClass('d-none');\n  $('.listeSerie').remove();\n  var espece = $('#especeSelect').children(\"option:selected\").attr('id'); // On modifie l'url pour pouvoir faire la requete\n\n  var url = url_actuelle.replace('laboratoire/demandes/create', 'api/anaactes/' + anatype_id + '/' + espece);\n  $('#anaacteSelect').children().remove();\n  $.get({\n    'url': url\n  }).done(function (data) {\n    var anaactes = JSON.parse(data);\n    console.log(anaactes);\n    var option = '';\n    $.each(anaactes, function (key, value) {\n      option += '<option value=\"' + value.anaacte_id + '\">' + strUcFirst(value.nom) + '</option>';\n    });\n    $('#anaacteSelect').append(option);\n\n    if (anaactes.length == 1) {\n      $('#anaacteSelect').children().attr('selected', 'selected');\n      ajouterEstSerie($('#anaacteSelect > option:selected').val(), $(\"#userSelect > option:selected\").attr('id'));\n    }\n  });\n} //################################################################################################\n// Au changement d'anaacte on appelle la fonction ajouterEstSerie\n\n\n$(\"select[name='anaacte_id'] \").on('change', function () {\n  $('.listeSerie').remove(); // après avoir éliminer d'éventuelles lignes résiduelles\n\n  var anaacte_id = $(\"#anaacteSelect > option:selected\").val();\n  var user_id = $(\"#userSelect > option:selected\").attr('id');\n  ajouterEstSerie(anaacte_id, user_id);\n}); // Fonction pour vérifier si l'anaacte correspond à une série\n\nfunction ajouterEstSerie(anaacte_id, user_id) {\n  // l'adresse pour consulter la méthode estSerie de AnapackController est estserie/anapack_id/user_id\n  var url_nouvelle = url_actuelle.replace('laboratoire/demandes/create', 'api/estSerie/' + anaacte_id + '/' + user_id);\n  console.log(url_nouvelle);\n  $.get({\n    url: url_nouvelle,\n    data_type: 'json' // renvoie un json: estSerie (bouleen), nbDemande (integer), numero d'ordre (objet Demande)\n\n  }).done(function (data) {\n    $('#premier').empty();\n    var liste = JSON.parse(data); // on récupère le json\n\n    if (liste.estSerie == 1) {\n      // Si c'est une série\n      $('#estSerie').removeClass('d-none'); // on affiche le bloc correspondant\n\n      $('#premierPrelevementSerie').val('premier');\n\n      if (liste.nbDemandes != 0) {\n        // si l'user à déjà des séries inachevées du meme anapack on affiche l'info avec du dernier prélèvement\n        $('#pas_de_serie').hide();\n        $('#y_a_serie').show();\n\n        for (var i = 0; i < liste.nbDemandes; i++) {\n          // On passe en revue les différentes demandes dans ce cas (série identique inachevée)\n          $(\"#premier\").append('<div class=\"form-check\">' + '<input type=\"radio\" class=\"form-check-input\"  id=\"premierPrelevementSerie\" name=\"serie\" value=\"null\" checked >' + '<label class=\"form-check-label\" for=\"premierPrelevementSerie\">' + $('#premier_envoi').attr(\"texte\") + '</label></div>' + '<div class=\"form-check mt-2\">' + '<input type=\"radio\" class=\"form-check-input\" id=\"serie_' + liste[i].id + '\" name=\"serie\" value=\"' + liste[i].id + '\">' + '<label class=\"form-check-label\" for=\"demande_id\">' + $('#autre').attr(\"texte\") + ' ' + liste[i].date_reception + '</label>' + '</div>');\n        }\n      } else {\n        $('#y_a_serie').hide();\n        $('#pas_de_serie').show();\n      }\n    } else {\n      // Sinon on efface tout le bloc\n      $('#premierPrelevementSerie').val(null);\n      $('#estSerie').addClass('d-none');\n      $('.listeSerie').remove();\n    }\n  }).fail(function (data) {\n    console.log(data);\n  });\n} // Fonction pour mettre le permier mot en majuscule\n\n\nfunction strUcFirst(a) {\n  return (a + '').charAt(0).toUpperCase() + a.substr(1);\n}\n\n;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/createDemandeTypeActe.js\n");

/***/ }),

/***/ 5:
/*!******************************************!*\
  !*** multi ./resources/js/createDemande ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! /mnt/c/Users/33683/www/parasitlab/resources/js/createDemande */"./resources/js/createDemande.js");


/***/ })

/******/ });